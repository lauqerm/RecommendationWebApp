let icBias = [
	[],
	[0, 0, 0, 2, 1, -1, 0, 1, 0, 2, 1, -1, 0, 1, 0, 2, 1, -1, 0, 1, 0, 2, 1, -1],
	[1, 1, 1, 2, 1, -1, 1, 1, 1, 2, 1, -1, 1, 1, 1, 2, 1, -1, 0, 0, 0, 1, 0, -1],
	[0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, -1, -1, -1, -1, -1, -1],
	[1, 2, 1, 2, 0, 0, 1, 2, 1, 2, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0],
	[2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 1, 0],
	[0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 0, 1, 2, 1, 0, 1, 0, 1, 2, 1, 0, 1],
	[0, 0, 2, 0, 1, 0, 1, 1, 2, 0, 1, 0, 1, 1, 2, 0, 1, 0, 1, 1, 2, 0, 1, 0],
	[1, 1, 0, 2, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 2, 1, 1, 1, 1, 0, 2, 1, 1],
	[0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0],
	[1, 2, 0, 2, 1, 0, 1, 2, 0, 2, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0],
	[0, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, -1, 1, -1, 0, 0, -1],
	[0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0],
	[0, 2, 1, 1, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, -1],
	[2, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],
	[0, 0, 0, 1, 1, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 2, 2, 0],
	[0, 2, 1, 1, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 1, 0, 0, 1, -1],
	[1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0],
	[1, 1, 0, 2, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 2, 1, 1, 1, 1, 0, 2, 1, 1],
	[1, 1, 0, -1, -1, 1, 2, 1, 0, -1, 0, 1, 2, 1, 0, -1, 0, 1, 2, 1, 0, -1, 0, 1],
	[1, 1, 1, 2, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 2, 1, 1, 1, 1, 0, 2, 1, 1],
	[2, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],
	[1, 2, 1, 2, 0, 0, 1, 2, 1, 2, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0],
	[2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 1, 0, 2, 1, 1, 2, 1, 0],
	[1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0],
	[0, 0, 0, 0, 0, 0, 1, 2, 1, 2, 2, 0, 1, 2, 1, 2, 2, 0, 1, 1, 1, 1, 1, 0],
	[1, -1, -1, 1, -1, 2, 1, -1, -1, 1, -1, 2, 1, -1, -1, 1, -1, 2, 1, -1, -1, 1, -1, 2],
	[1, -1, -1, 1, -1, 2, 2, -1, -1, 1, -1, 2, 1, -1, -1, 1, -1, 2, 1, -1, -1, 1, -1, 2],
	[1, 1, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0],
	[1, 0, 2, 2, 0, 0, 1, 0, 2, 2, 1, 0, 1, 0, 2, 2, 0, 0, 1, 0, 2, 2, 0, 0],
	[1, -1, -1, 1, -1, 1, 0, -1, -1, 1, -1, 2, 2, -1, -1, 1, -1, 2, 0, -1, -1, 1, -1, 2],
	[1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
	[0, 2, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0, 2, 1, 1, 1, 1, -1, -1, -1, -1, -1, 0],
	[1, 0, 0, -1, -1, 1, 2, 1, 0, -1, 0, 1, 2, 1, 0, -1, 0, 1, 2, 1, 0, -1, 0, 1]
]
let generator = () => {
	const userCnt = 30
	for(let i = 1; i <= 600; i++) {
		let location = Math.floor(Math.random() * (icBias.length - 1)) + 1
		let partner = Math.floor(Math.random() * 6) + 1
		let time = Math.floor(Math.random() * 4) + 1
		let bias = icBias[location][(time - 1) * 6 + (partner - 1)]
		// console.log(bias)
		let p = 0
		switch(bias){
			case -1: p = Math.random() < 0.1 ? 2 : 3; break;
			case 0: p = Math.random() < 0.33 ? 3 : 4; break;
			case 1: p = Math.random() < 0.33 ? 4 : 5; break;
			case 2: p = 5; break;
		}
		console.log(`${Math.ceil(i / userCnt)}\t${location}\t${p}\t${partner}\t${time}`)
	}
}
generator()